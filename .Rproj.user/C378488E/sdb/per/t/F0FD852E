{
    "contents" : "#' @title 2D Plot for PCA result using ggplot2\n#' @rdname ggpca.biplot\n#' @param data PCA results coordinates.\n#' @param rotation PCA rotation matrix\n#' @param pca.fit object of class \\code{\\link{prcomp}}.\n#' @param color vector representing the color variable of the observations on which the pca was run.\n#' @param shape equivalent of \\code{color} for shape values.\n#' @param size equivalent of \\code{color} for size values.\n#' @param obsnames names of the observations.\n#' @param arrows.to.keep Specify \\code{arrow.to.keep} when only a subset of the initial variables should appear as arrows.\n#' @param x1 name or index of the PCA component to plot on the x-axis\n#' @param x2 name or index of the PCA component to plot on the y-axis\n#' @return A ggplot2 object.\n#' @seealso \\code{\\link{ggpca.check}}\n#' @export\nggpca.biplot <- function(data,rotation,color,shape,size,obsnames,arrows.to.keep,x1=1,x2=2) {\n  if(missing(obsnames)) obsnames=row.names(data)\n  x=data[,x1]\n  y=data[,x2]\n  plot <- ggscatter.xy(x=x,y=y,color=color,shape=shape,size=size,obsnames=obsnames)\n    \n  plot <- plot + geom_hline(aes(0), size=.1,color=\"darkgrey\") + geom_vline(aes(0), size=.1,color=\"darkgrey\")\n  datapc <- data.frame(rotation)\n  mult <- min(\n    (max(y) - min(y)/(max(datapc[,x2])-min(datapc[,x2]))),\n    (max(x) - min(x)/(max(datapc[,x1])-min(datapc[,x1])))\n  )\n  datapc$v1= .7 * mult *datapc[[x1]]\n  datapc$v2= .7 * mult *datapc[[x2]]\n  datapc$varnames=rownames(rotation)\n  if(!missing(arrows.to.keep)) datapc=datapc[arrows.to.keep,]\n  plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 3, vjust=1, color=\"black\")\n  plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2),alpha=0.75, color=\"black\",arrow=arrow(length=unit(0.2,\"cm\")))\n}\n\n#' @rdname ggpca.biplot\n#' @export\n#' @examples\n#' \\donttest{\n#' pca.mtcars=prcomp(mtcars,center=TRUE,scale=TRUE)\n#' ggpca.biplot.prcomp(pca.mtcars,as.factor(mtcars$cyl),size=4)\n#' ggpca.biplot.prcomp(pca.mtcars,as.factor(mtcars$cyl),size=4,arrows.to.keep=c(\"gear\",\"disp\",\"mpg\"))\n#' }\nggpca.biplot.prcomp <- function(pca.fit,color,shape,size,obsnames,arrows.to.keep,x1=\"PC1\",x2=\"PC2\") {\n  plot=ggpca.biplot(pca.fit$x,pca.fit$rotation,color,shape,size,obsnames,arrows.to.keep,x1,x2)\n  if((x1==\"PC1\")&&(x2==\"PC2\")) plot=plot+labs(x=\"First component\",y=\"Second component\")\n  plot\n}\n\n#' @title Check variance PCA plot (look for specific name for this function)\n#' @param pca.fit object of class \\code{prcomp}.\n#' @return A ggplot2 object.\n#' @seealso \\code{\\link{ggpca.biplot}}\n#' @export\nggpca.check.prcomp=function(pca.fit){\n  variance=pca.fit$sdev^2;\n  df=data.frame(dimension=as.factor(seq(length(pca.fit$center))),y=cumsum(variance)/sum(variance));\n  g.check=ggplot(data=df,aes(x=dimension,y=y))+geom_bar(stat=\"identity\")+\n    ylab(\"% explained of the variance\");\n  return(g.check);\n}",
    "created" : 1381210852398.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2308889965",
    "id" : "F0FD852E",
    "lastKnownWriteTime" : 1385514695,
    "path" : "~/R&D/R packages/Source packages/ggmultvar/R/pca_plot.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}